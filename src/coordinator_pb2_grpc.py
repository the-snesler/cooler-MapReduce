# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import coordinator_pb2 as coordinator__pb2


class CoordinatorServiceStub(object):
    """CoordinatorService handles job submission and status queries from clients
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SubmitJob = channel.unary_unary(
                '/mapreduce.CoordinatorService/SubmitJob',
                request_serializer=coordinator__pb2.JobRequest.SerializeToString,
                response_deserializer=coordinator__pb2.JobResponse.FromString,
                )
        self.GetJobStatus = channel.unary_unary(
                '/mapreduce.CoordinatorService/GetJobStatus',
                request_serializer=coordinator__pb2.JobStatusRequest.SerializeToString,
                response_deserializer=coordinator__pb2.JobStatusResponse.FromString,
                )
        self.ListJobs = channel.unary_unary(
                '/mapreduce.CoordinatorService/ListJobs',
                request_serializer=coordinator__pb2.Empty.SerializeToString,
                response_deserializer=coordinator__pb2.JobListResponse.FromString,
                )
        self.GetJobResults = channel.unary_unary(
                '/mapreduce.CoordinatorService/GetJobResults',
                request_serializer=coordinator__pb2.JobResultsRequest.SerializeToString,
                response_deserializer=coordinator__pb2.JobResultsResponse.FromString,
                )


class CoordinatorServiceServicer(object):
    """CoordinatorService handles job submission and status queries from clients
    """

    def SubmitJob(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListJobs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetJobResults(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CoordinatorServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SubmitJob': grpc.unary_unary_rpc_method_handler(
                    servicer.SubmitJob,
                    request_deserializer=coordinator__pb2.JobRequest.FromString,
                    response_serializer=coordinator__pb2.JobResponse.SerializeToString,
            ),
            'GetJobStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobStatus,
                    request_deserializer=coordinator__pb2.JobStatusRequest.FromString,
                    response_serializer=coordinator__pb2.JobStatusResponse.SerializeToString,
            ),
            'ListJobs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListJobs,
                    request_deserializer=coordinator__pb2.Empty.FromString,
                    response_serializer=coordinator__pb2.JobListResponse.SerializeToString,
            ),
            'GetJobResults': grpc.unary_unary_rpc_method_handler(
                    servicer.GetJobResults,
                    request_deserializer=coordinator__pb2.JobResultsRequest.FromString,
                    response_serializer=coordinator__pb2.JobResultsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'mapreduce.CoordinatorService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class CoordinatorService(object):
    """CoordinatorService handles job submission and status queries from clients
    """

    @staticmethod
    def SubmitJob(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.CoordinatorService/SubmitJob',
            coordinator__pb2.JobRequest.SerializeToString,
            coordinator__pb2.JobResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.CoordinatorService/GetJobStatus',
            coordinator__pb2.JobStatusRequest.SerializeToString,
            coordinator__pb2.JobStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListJobs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.CoordinatorService/ListJobs',
            coordinator__pb2.Empty.SerializeToString,
            coordinator__pb2.JobListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetJobResults(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/mapreduce.CoordinatorService/GetJobResults',
            coordinator__pb2.JobResultsRequest.SerializeToString,
            coordinator__pb2.JobResultsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
