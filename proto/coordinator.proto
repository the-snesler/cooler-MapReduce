syntax = "proto3";

package mapreduce;

// CoordinatorService handles job submission and status queries from clients
service CoordinatorService {
  rpc SubmitJob(JobRequest) returns (JobResponse);
  rpc GetJobStatus(JobStatusRequest) returns (JobStatusResponse);
  rpc ListJobs(Empty) returns (JobListResponse);
  rpc GetJobResults(JobResultsRequest) returns (JobResultsResponse);
}

// Request to submit a new MapReduce job
message JobRequest {
  string input_path = 1;        // Path to input file(s) in shared storage
  string output_path = 2;       // Directory path for output files
  string job_file_path = 3;     // Path to user job file in shared storage
  int32 num_map_tasks = 4;      // Number of map tasks
  int32 num_reduce_tasks = 5;   // Number of reduce tasks
}

// Response after job submission
message JobResponse {
  string job_id = 1;            // Unique identifier for the job
  string status = 2;            // Initial status (e.g., "SUBMITTED")
}

// Request for job status
message JobStatusRequest {
  string job_id = 1;
}

// Response with job status details
message JobStatusResponse {
  string job_id = 1;
  string status = 2;            // SUBMITTED, RUNNING, COMPLETED, FAILED
  int32 total_map_tasks = 3;
  int32 completed_map_tasks = 4;
  int32 total_reduce_tasks = 5;
  int32 completed_reduce_tasks = 6;
  string error_message = 7;     // Error details if status is FAILED
}

// Empty message for requests with no parameters
message Empty {}

// Response listing all jobs
message JobListResponse {
  repeated JobInfo jobs = 1;
}

message JobInfo {
  string job_id = 1;
  string status = 2;
  string submit_time = 3;
}

// Request for job results
message JobResultsRequest {
  string job_id = 1;
}

// Response with job results information
message JobResultsResponse {
  string job_id = 1;
  string status = 2;
  repeated string output_files = 3;  // List of output file paths
}
